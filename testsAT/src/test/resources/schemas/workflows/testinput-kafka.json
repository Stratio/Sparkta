{
  "id": "94d0ba25-59a6-4df1-aca5-c276ed94c829",
  "name": "testinput-kafka",
  "description": "testinput-to-print.json",
  "settings": {
    "global": {
      "executionMode": "marathon",
      "streamTemporalTable": "stream",
      "driverUri": "/opt/sds/sparta/driver/sparta-driver.jar",
      "userPluginsJars": [
        {
          "jarPath": ""
        }
      ],
      "initSqlSentences": [
        {
          "sentence": ""
        }
      ]
    },
    "checkpointSettings": {
      "checkpointPath": "sparta/checkpoint",
      "enableCheckpointing": true,
      "autoDeleteCheckpoint": true,
      "addTimeToCheckpointPath": false
    },
    "streamingSettings": {
      "window": "30s"
    },
    "sparkSettings": {
      "master": "mesos://leader.mesos:5050",
      "sparkKerberos": true,
      "sparkDataStoreTls": true,
      "sparkHome": "/opt/spark/dist",
      "sparkUser": "",
      "submitArguments": {
        "userArguments": [
          {
            "submitArgument": "",
            "submitValue": ""
          }
        ],
        "deployMode": "client",
        "supervise": false
      },
      "sparkConf": {
        "sparkResourcesConf": {
          "coresMax": "2",
          "executorMemory": "1G",
          "executorCores": "2",
          "driverCores": "1",
          "driverMemory": "2G",
          "localityWait": "0",
          "taskMaxFailures": "8",
          "blockInterval": "200ms"
        },
        "sparkDockerConf": {
          "executorDockerImage": "qa.stratio.com/stratio/stratio-spark:2.1.0.1",
          "executorDockerVolumes": "/opt/mesosphere/packages/:/opt/mesosphere/packages/:ro,/opt/mesosphere/lib/:/opt/mesosphere/lib/:ro",
          "executorForcePullImage": false
        },
        "sparkMesosConf": {
          "mesosNativeJavaLibrary": "/opt/mesosphere/lib/libmesos.so",
          "mesosExecutorHome": "/opt/spark/dist"
        },
        "userSparkConf": [
          {
            "sparkConfKey": "spark.executor.extraJavaOptions",
            "sparkConfValue": "-Dlog4j.logger.org.apache.spark=ERROR"
          },
          {
            "sparkConfKey": "spark.launcher.childProcLoggerName",
            "sparkConfValue": "com.stratio.sparta"
          }
        ],
        "coarse": true,
        "stopGracefully": true,
        "parquetBinaryAsString": true
      }
    }
  },
  "rawData": {
    "dataField": "ficheros",
    "timeField": "ficheros",
    "writer": {
      "outputs": [],
      "autoCalculatedFields": [],
      "saveMode": "Append",
      "tableName": "ficheros",
      "partitionBy": "",
      "boolFailFast": false
    },
    "configuration": {}
  },
  "transformations": {
    "transformationsPipe": [
      {
        "type": "Json",
        "order": 0,
        "inputField": "_attachment_body",
        "outputFields": [
          {
            "name": "id",
            "type": "string"
          }
        ],
        "configuration": {
          "queries": [
            {
              "field": "id",
              "query": "$.id"
            }
          ],
          "supportNullValues": true,
          "whenError": "Error",
          "removeInputField": false
        }
      }
    ],
    "writer": {
      "outputs": [],
      "autoCalculatedFields": [],
      "saveMode": "Append",
      "tableName": "datossave",
      "boolFailFast": false
    }
  },
  "streamTriggers": [
    {
      "name": "trigertest",
      "sql": "select id from stream",
      "writer": {
        "outputs": [
          {
            "primary": "kafkaoutput"
          }
        ],
        "autoCalculatedFields": [],
        "saveMode": "Append",
        "boolFailFast": false
      },
      "overLast": "30s",
      "configuration": {},
      "computeEvery": "30s"
    }
  ],
  "cubes": [],
  "input": {
    "name": "cubetest",
    "type": "Test",
    "configuration": {
      "maxNumbEvents": "400",
      "eventType": "STRING",
      "event": "{\"id\": \"00062016092205802134\",\"name\":\"ticket1\"}",
      "receiverType": "LIMITED",
      "numEvents": "400",
      "storageLevel": "MEMORY_ONLY_SER"
    }
  },
  "outputs": [
    {
      "name": "kafkaoutput",
      "type": "Kafka",
      "configuration": {
        "format": "JSON",
        "vaultKeyPassPath": "/v1/userland/passwords/sparta-server/keystore",
        "vaultTLSEnable": true,
        "vaultTrustStorePath": "/v1/ca-trust/certificates/ca",
        "vaultRole": "open",
        "tlsEnabled": true,
        "security.protocol": "PLAINTEXT",
        "bootstrap.servers": [
          {
            "host": "broker-0001.kafka-sec.mesos",
            "port": "9092"
          }
        ],
        "rowSeparator": ",",
        "vaultCertPath": "/v1/userland/certificates/sparta-server",
        "kafkaProperties": [
          {
            "kafkaPropertyKey": "",
            "kafkaPropertyValue": ""
          }
        ],
        "value.serializer": "org.apache.kafka.common.serialization.StringSerializer",
        "acks": "0",
        "ssl.client.auth": "required",
        "key.serializer": "org.apache.kafka.common.serialization.StringSerializer",
        "vaultCertPassPath": "/v1/userland/passwords/sparta-server/keystore",
        "batch.size": "200",
        "vaultTrustStorePassPath": "/v1/userland/passwords/sparta-server/keystore"
      }
    }
  ],
  "fragments": []
}