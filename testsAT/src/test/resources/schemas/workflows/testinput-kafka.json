{
  "id": "85b5bcf4-301f-4d24-9d13-81c033275875",
  "name": "testinput-kafka",
  "description": "Automatic Workflow testinput kafka 400ev",
  "settings": {
    "global": {
      "executionMode": "marathon",
      "userPluginsJars": [],
      "initSqlSentences": [],
      "addAllUploadedPlugins": true,
      "mesosConstraint": "",
      "mesosConstraintOperator": "CLUSTER"
    },
    "streamingSettings": {
      "window": "10s",
      "remember": "",
      "backpressure": false,
      "blockInterval": "100ms",
      "stopGracefully": false,
      "checkpointSettings": {
        "checkpointPath": "sparta/checkpoint",
        "enableCheckpointing": true,
        "autoDeleteCheckpoint": true,
        "addTimeToCheckpointPath": false
      }
    },
    "sparkSettings": {
      "master": "mesos://leader.mesos:5050",
      "sparkKerberos": true,
      "sparkDataStoreTls": true,
      "sparkMesosSecurity": true,
      "submitArguments": {
        "userArguments": [],
        "deployMode": "client",
        "driverJavaOptions": "-Dconfig.file=/etc/sds/sparta/spark/reference.conf -XX:+UseConcMarkSweepGC -Dlog4j.configurationFile=file:///etc/sds/sparta/log4j2.xml"
      },
      "sparkConf": {
        "sparkResourcesConf": {
          "coresMax": "1",
          "executorMemory": "2G",
          "executorCores": "1",
          "driverCores": "1",
          "driverMemory": "2G",
          "mesosExtraCores": "",
          "localityWait": "100",
          "taskMaxFailures": "8",
          "sparkMemoryFraction": "0.6",
          "sparkParallelism": ""
        },
        "userSparkConf": [],
        "coarse": true,
        "sparkUser": "",
        "sparkLocalDir": "/opt/spark/dist",
        "executorDockerImage": "qa.stratio.com/stratio/stratio-spark:2.2.0.5",
        "sparkKryoSerialization": false,
        "sparkSqlCaseSensitive": false,
        "logStagesProgress": false,
        "hdfsTokenCache": true,
        "executorExtraJavaOptions": "-XX:+UseConcMarkSweepGC"
      }
    },
    "errorsManagement": {
      "genericErrorManagement": {
        "whenError": "Error"
      },
      "transformationStepsManagement": {
        "whenError": "Error",
        "whenRowError": "RowError",
        "whenFieldError": "FieldError"
      },
      "transactionsManagement": {
        "sendToOutputs": [],
        "sendStepData": false,
        "sendPredecessorsData": false,
        "sendInputData": true
      }
    }
  },
  "pipelineGraph": {
    "nodes": [
      {
        "name": "Test",
        "stepType": "Input",
        "className": "TestInputStepStreaming",
        "classPrettyName": "Test",
        "arity": [
          "NullaryToNary"
        ],
        "writer": {
          "saveMode": "Append",
          "tableName": "",
          "partitionBy": ""
        },
        "description": "Json with ID",
        "uiConfiguration": {
          "position": {
            "x": 476,
            "y": 234
          }
        },
        "configuration": {
          "maxNumbEvents": "400",
          "eventType": "STRING",
          "outputField": "raw",
          "event": "{\"id\":\"550\"}",
          "numEvents": "400"
        },
        "supportedEngines": [],
        "executionEngine": "Streaming"
      },
      {
        "name": "JsonPath",
        "stepType": "Transformation",
        "className": "JsonPathTransformStepStreaming",
        "classPrettyName": "JsonPath",
        "arity": [
          "UnaryToNary"
        ],
        "writer": {
          "saveMode": "Append",
          "tableName": "",
          "partitionBy": ""
        },
        "uiConfiguration": {
          "position": {
            "x": 729,
            "y": 234
          }
        },
        "configuration": {
          "queries": [
            {
              "field": "id",
              "query": "$.id",
              "type": "string"
            }
          ],
          "whenError": "Error",
          "supportNullValues": true,
          "fieldsPreservationPolicy": "REPLACE",
          "inputField": "raw"
        },
        "supportedEngines": [],
        "executionEngine": "Streaming"
      },
      {
        "name": "Kafka",
        "stepType": "Output",
        "className": "KafkaOutputStep",
        "classPrettyName": "Kafka",
        "arity": [
          "NaryToNullary"
        ],
        "writer": {
          "saveMode": "Append"
        },
        "description": "Kafka Output",
        "uiConfiguration": {
          "position": {
            "x": 1239,
            "y": 234
          }
        },
        "configuration": {
          "value.serializer.outputFormat": "JSON",
          "tlsEnabled": true,
          "security.protocol": "PLAINTEXT",
          "bootstrap.servers": [
            {
              "host": "broker-0001.kafka-sec.mesos",
              "port": "9092"
            }
          ],
          "acks": "0",
          "ssl.client.auth": "required",
          "saveOptions": "[]",
          "keySeparator": ",",
          "batch.size": "200"
        },
        "supportedEngines": [],
        "executionEngine": "Streaming"
      },
      {
        "name": "idtable",
        "stepType": "Transformation",
        "className": "TriggerTransformStepStreaming",
        "classPrettyName": "Trigger",
        "arity": [
          "BinaryToNary",
          "UnaryToNary"
        ],
        "writer": {
          "saveMode": "Append",
          "tableName": "idtopic",
          "partitionBy": ""
        },
        "uiConfiguration": {
          "position": {
            "x": 954,
            "y": 234
          }
        },
        "configuration": {
          "sql": "select id from JsonPath"
        },
        "supportedEngines": [],
        "executionEngine": "Streaming"
      }
    ],
    "edges": [
      {
        "origin": "Test",
        "destination": "JsonPath"
      },
      {
        "origin": "JsonPath",
        "destination": "idtable"
      },
      {
        "origin": "idtable",
        "destination": "Kafka"
      }
    ]
  },
  "executionEngine": "Streaming",
  "uiSettings": {
    "position": {
      "x": -216,
      "y": -1,
      "k": 1
    }
  },
  "lastUpdateDate": "2018-04-02T17:12:45Z",
  "version": 0,
  "group": {
    "id": "940800b2-6d81-44a8-84d9-26913a2faea4",
    "name": "/home"
  },
  "status": {
    "id": "85b5bcf4-301f-4d24-9d13-81c033275875",
    "status": "Started",
    "statusInfo": "Workflow started correctly",
    "lastExecutionMode": "marathon",
    "lastUpdateDate": "2018-04-02T17:35:31Z",
    "sparkURI": "https://sparta.nightly.labs.stratio.com/workflows-sparta-server/home/testinput-kafka/testinput-kafka-v0/",
    "lastUpdateDateWorkflow": "2018-04-02T17:12:45Z"
  }
}