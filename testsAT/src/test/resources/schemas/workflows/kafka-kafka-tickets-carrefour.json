{
  "id": "93af5c15-d884-4981-9a3d-f1f142de60e4",
  "storageLevel": "MEMORY_ONLY_SER",
  "name": "kafka-kafka-carrefour_auto",
  "description": "Read carrefour tickets from khermes generator",
  "sparkStreamingWindow": "6s",
  "transformations": {
    "transformationsPipe": [
      {
        "type": "Json",
        "order": 0,
        "inputField": "_attachment_body",
        "outputFields": [
          {
            "name": "mallNumber",
            "type": "string"
          },
          {
            "name": "date",
            "type": "string"
          },
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "clientId",
            "type": "long"
          },
          {
            "name": "shaOne",
            "type": "string"
          },
          {
            "name": "clubCardNumber",
            "type": "long"
          },
          {
            "name": "numberAuxiliaryData",
            "type": "string"
          },
          {
            "name": "auxiliaryData",
            "type": "string"
          },
          {
            "name": "header",
            "type": "mapstringstring"
          },
          {
            "name": "items",
            "type": "arraymapstringstring"
          },
          {
            "name": "operator",
            "type": "string"
          },
          {
            "name": "netAmount",
            "type": "double"
          },
          {
            "name": "vatItems",
            "type": "arraymapstringstring"
          },
          {
            "name": "lines",
            "type": "arraystring"
          },
          {
            "name": "concepts",
            "type": "arraymapstringstring"
          }
        ],
        "configuration": {
          "queries": [
            {
              "field": "id",
              "query": "$.id"
            },
            {
              "field": "clientId",
              "query": "$.clientId"
            },
            {
              "field": "mallNumber",
              "query": "$.mallNumber"
            },
            {
              "field": "shaOne",
              "query": "$.shaOne"
            },
            {
              "field": "header",
              "query": "$.header"
            },
            {
              "field": "clubCardNumber",
              "query": "$.clubCardNumber"
            },
            {
              "field": "numberAuxiliaryData",
              "query": "$.numberAuxiliaryData"
            },
            {
              "field": "auxiliaryData",
              "query": "$.auxiliaryData"
            },
            {
              "field": "date",
              "query": "$.date"
            },
            {
              "field": "concepts",
              "query": "$.concepts"
            },
            {
              "field": "items",
              "query": "$.items"
            },
            {
              "field": "vatItems",
              "query": "$.vatItems"
            },
            {
              "field": "lines",
              "query": "$.lines"
            },
            {
              "field": "operator",
              "query": "$.header.operator"
            },
            {
              "field": "netAmount",
              "query": "$.header.netAmount"
            }
          ],
          "whenError": "Error",
          "removeInputField": true
        }
      },
      {
        "type": "DateTime",
        "order": 1,
        "inputField": "date",
        "outputFields": [
          {
            "name": "fechawena",
            "type": "datetime"
          }
        ],
        "configuration": {
          "standardFormat": "unixMillis",
          "userFormat": "yyyy-MM-dd'T'HH:mm",
          "whenError": "Error",
          "formatFrom": "USER",
          "removeInputField": false,
          "inputFormat": "yyyy-MM-dd'T'HH:mm"
        }
      }
    ],
    "writer": {
      "outputs": [],
      "autoCalculatedFields": [],
      "saveMode": "Append"
    }
  },
  "streamTriggers": [
    {
      "name": "wrongvat",
      "sql": "SELECT p.id, p.header.ticketNumber, p.header.netAmount, vatitemsexplode.vatitemsexplodeselection.share FROM stream p LATERAL VIEW EXPLODE(p.vatItems) vatitemsexplode as vatitemsexplodeselection WHERE  vatitemsexplode.vatitemsexplodeselection.share <> 21 AND vatitemsexplode.vatitemsexplodeselection.share <> 4 AND vatitemsexplode.vatitemsexplodeselection.share <> 10",
      "writer": {
        "outputs": [
          "kakfa_framework"
        ],
        "autoCalculatedFields": [],
        "saveMode": "Append"
      },
      "overLast": "6s",
      "configuration": {},
      "computeEvery": "6s"
    },
    {
      "name": "dangerousitems",
      "sql": "SELECT p.id, p.header.ticketNumber, p.header.netAmount as ticketnetAmount, itemsexplode.itemsexplodeselection.description, itemsexplode.itemsexplodeselection.netAmount FROM stream p LATERAL VIEW EXPLODE(p.items) itemsexplode as itemsexplodeselection WHERE  itemsexplode.itemsexplodeselection.netAmount > 500",
      "writer": {
        "outputs": [
          "kakfa_framework"
        ],
        "autoCalculatedFields": [],
        "saveMode": "Append"
      },
      "overLast": "6s",
      "configuration": {},
      "computeEvery": "6s"
    }
  ],
  "cubes": [
    {
      "name": "mallmetrics",
      "dimensions": [
        {
          "name": "mallnumber",
          "field": "mallNumber",
          "precision": "identity",
          "type": "Default"
        },
        {
          "name": "date",
          "field": "date",
          "precision": "undefinedminute",
          "type": "DateTime",
          "computeLast": "365d"
        }
      ],
      "operators": [
        {
          "type": "Count",
          "name": "numTickets",
          "configuration": {}
        },
        {
          "type": "Sum",
          "name": "totalAmount",
          "configuration": {
            "inputField": "netAmount"
          }
        }
      ],
      "writer": {
        "outputs": [
          "kakfa_framework"
        ],
        "dateType": "timestamp",
        "autoCalculatedFields": [],
        "saveMode": "Upsert"
      },
      "triggers": [],
      "avoidNullValues": true
    },
    {
      "name": "operatormetrics",
      "dimensions": [
        {
          "name": "operator",
          "field": "operator",
          "precision": "identity",
          "type": "Default"
        },
        {
          "name": "date",
          "field": "date",
          "precision": "undefinedminute",
          "type": "DateTime",
          "computeLast": "365d"
        }
      ],
      "operators": [
        {
          "type": "Count",
          "name": "numTickets",
          "configuration": {}
        },
        {
          "type": "Sum",
          "name": "totalAmount",
          "configuration": {
            "inputField": "netAmount"
          }
        }
      ],
      "writer": {
        "outputs": [
          "kakfa_framework"
        ],
        "dateType": "timestamp",
        "autoCalculatedFields": [],
        "saveMode": "Upsert"
      },
      "triggers": [],
      "avoidNullValues": true
    },
    {
      "name": "clientmetrics",
      "dimensions": [
        {
          "name": "clientId",
          "field": "clientId",
          "precision": "identity",
          "type": "Default"
        },
        {
          "name": "date",
          "field": "date",
          "precision": "undefinedminute",
          "type": "DateTime",
          "computeLast": "365d"
        }
      ],
      "operators": [
        {
          "type": "Count",
          "name": "numTickets",
          "configuration": {}
        },
        {
          "type": "Sum",
          "name": "totalAmount",
          "configuration": {
            "inputField": "netAmount"
          }
        }
      ],
      "writer": {
        "outputs": [
          "kakfa_framework"
        ],
        "dateType": "timestamp",
        "autoCalculatedFields": [],
        "saveMode": "Upsert"
      },
      "triggers": [],
      "avoidNullValues": true
    }
  ],
  "input": {
    "name": "kafka-khermes",
    "type": "Kafka",
    "configuration": {
      "key.deserializer": "string",
      "locationStrategy": "preferconsistent",
      "vaultKeyPassPath": "/v1/userland/passwords/spark-1/keystore",
      "topics": [
        {
          "topic": "khermes"
        }
      ],
      "auto.offset.reset": "latest",
      "partition.assignment.strategy": "range",
      "group.id": "",
      "bootstrap.servers": [
        {
          "host": "broker-0.confluent-kafka-sec.mesos",
          "port": "9229"
        },
        {
          "host": "broker-1.confluent-kafka-sec.mesos",
          "port": "9710"
        },
        {
          "host": "broker-2.confluent-kafka-sec.mesos",
          "port": "9323"
        }
      ],
      "enable.auto.commit": false,
      "vaultCertPath": "/v1/userland/certificates/spark-1",
      "value.deserializer": "string",
      "kafkaProperties": [
        {
          "kafkaPropertyKey": "",
          "kafkaPropertyValue": ""
        }
      ],
      "vaultCertPassPath": "/v1/userland/passwords/spark-1/keystore",
      "storeOffsetInKafka": true
    }
  },
  "outputs": [
    {
      "name": "kakfa_framework",
      "type": "Kafka",
      "configuration": {
        "format": "JSON",
        "vaultKeyPassPath": "/v1/userland/passwords/spark-1/keystore",
        "ssl.truststore.location": "",
        "security.protocol": "SSL",
        "bootstrap.servers": [
          {
            "host": "broker-0.confluent-kafka-sec.mesos",
            "port": "9229"
          },
          {
            "host": "broker-1.confluent-kafka-sec.mesos",
            "port": "9710"
          },
          {
            "host": "broker-2.confluent-kafka-sec.mesos",
            "port": "9323"
          }
        ],
        "ssl.key.password": "",
        "rowSeparator": ",",
        "vaultCertPath": "/v1/userland/certificates/spark-1",
        "kafkaProperties": [
          {
            "kafkaPropertyKey": "",
            "kafkaPropertyValue": ""
          }
        ],
        "value.serializer": "org.apache.kafka.common.serialization.StringSerializer",
        "acks": "0",
        "ssl.truststore.password": "",
        "ssl.client.auth": "required",
        "key.serializer": "org.apache.kafka.common.serialization.StringSerializer",
        "vaultCertPassPath": "/v1/userland/passwords/spark-1/keystore",
        "ssl.keystore.password": "",
        "ssl.keystore.location": "",
        "batch.size": "200"
      }
    }
  ],
  "fragments": [],
  "userPluginsJars": [
    {
      "jarPath": ""
    }
  ],
  "sparkConf": [
    {
      "sparkConfKey": "spark.eventLog.enabled",
      "sparkConfValue": "true"
    },
    {
      "sparkConfKey": "spark.eventLog.dir",
      "sparkConfValue": "hdfs://10.200.0.74:8020/user/sparta"
    }
  ],
  "sparkSubmitArguments": [
    {
      "submitArgument": "",
      "submitValue": ""
    }
  ],
  "initSqlSentences": [
    {
      "sentence": ""
    }
  ],
  "autoDeleteCheckpoint": true,
  "streamTemporalTable": "stream",
  "sparkUser": "sparta",
  "sparkKerberos": true
}