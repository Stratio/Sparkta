{
  "id": "4950f949-cecb-4bd1-a242-a73a5389d77f",
  "name": "kaka-elastic",
  "description": "kaka-elastic.json",
  "settings": {
    "global": {
      "executionMode": "marathon",
      "streamTemporalTable": "stream",
      "driverUri": "/opt/sds/sparta/driver/sparta-driver.jar",
      "userPluginsJars": [
        {
          "jarPath": ""
        }
      ],
      "initSqlSentences": [
        {
          "sentence": ""
        }
      ]
    },
    "checkpointSettings": {
      "checkpointPath": "sparta/checkpoint",
      "enableCheckpointing": true,
      "autoDeleteCheckpoint": true,
      "addTimeToCheckpointPath": false
    },
    "streamingSettings": {
      "window": "30s"
    },
    "sparkSettings": {
      "master": "mesos://leader.mesos:5050",
      "sparkKerberos": true,
      "sparkDataStoreTls": true,
      "sparkHome": "/opt/spark/dist",
      "sparkUser": "",
      "submitArguments": {
        "userArguments": [
          {
            "submitArgument": "",
            "submitValue": ""
          }
        ],
        "deployMode": "client",
        "supervise": false
      },
      "sparkConf": {
        "sparkResourcesConf": {
          "coresMax": "2",
          "executorMemory": "1G",
          "executorCores": "2",
          "driverCores": "1",
          "driverMemory": "2G",
          "localityWait": "0",
          "taskMaxFailures": "8",
          "blockInterval": "200ms"
        },
        "sparkDockerConf": {
          "executorDockerImage": "qa.stratio.com/stratio/stratio-spark:2.1.0.1",
          "executorDockerVolumes": "/opt/mesosphere/packages/:/opt/mesosphere/packages/:ro,/opt/mesosphere/lib/:/opt/mesosphere/lib/:ro",
          "executorForcePullImage": false
        },
        "sparkMesosConf": {
          "mesosNativeJavaLibrary": "/opt/mesosphere/lib/libmesos.so",
          "mesosExecutorHome": "/opt/spark/dist"
        },
        "userSparkConf": [
          {
            "sparkConfKey": "spark.executor.extraJavaOptions",
            "sparkConfValue": "-Dlog4j.logger.org.apache.spark=ERROR"
          },
          {
            "sparkConfKey": "spark.launcher.childProcLoggerName",
            "sparkConfValue": "com.stratio.sparta"
          }
        ],
        "coarse": true,
        "stopGracefully": true,
        "parquetBinaryAsString": true
      }
    }
  },
  "rawData": {
    "dataField": "ficheros",
    "timeField": "ficheros",
    "writer": {
      "outputs": [],
      "autoCalculatedFields": [],
      "saveMode": "Append",
      "tableName": "ficheros",
      "partitionBy": "",
      "boolFailFast": false
    },
    "configuration": {}
  },
  "transformations": {
    "transformationsPipe": [
      {
        "type": "Json",
        "order": 0,
        "inputField": "_attachment_body",
        "outputFields": [
          {
            "name": "id",
            "type": "string"
          }
        ],
        "configuration": {
          "queries": [
            {
              "field": "id",
              "query": "$.id"
            }
          ],
          "supportNullValues": true,
          "whenError": "Error",
          "removeInputField": false
        }
      }
    ],
    "writer": {
      "outputs": [],
      "autoCalculatedFields": [],
      "saveMode": "Append",
      "tableName": "datossave",
      "boolFailFast": false
    }
  },
  "streamTriggers": [
    {
      "name": "trigertest",
      "sql": "select id from stream",
      "writer": {
        "outputs": [
          {
            "primary": "elastic-output"
          }
        ],
        "autoCalculatedFields": [],
        "saveMode": "Append",
        "boolFailFast": false
      },
      "overLast": "30s",
      "configuration": {},
      "computeEvery": "30s"
    }
  ],
  "cubes": [
    {
      "name": "cube1",
      "dimensions": [
        {
          "name": "id",
          "field": "id",
          "precision": "identity",
          "type": "Default"
        }
      ],
      "operators": [
        {
          "type": "Count",
          "name": "count",
          "configuration": {}
        }
      ],
      "writer": {
        "outputs": [
          {
            "primary": "elastic-output"
          }
        ],
        "dateType": "timestamp",
        "autoCalculatedFields": [],
        "saveMode": "Append",
        "boolFailFast": false
      },
      "triggers": [],
      "configuration": {}
    }
  ],
  "input": {
    "name": "kafka",
    "type": "Kafka",
    "configuration": {
      "key.deserializer": "string",
      "locationStrategy": "preferconsistent",
      "vaultKeyPassPath": "/v1/userland/passwords/sparta-server/keystore",
      "topics": [
        {
          "topic": "trigertest"
        }
      ],
      "auto.offset.reset": "latest",
      "partition.assignment.strategy": "range",
      "vaultTLSEnable": true,
      "vaultTrustStorePath": "/v1/ca-trust/certificates/ca",
      "vaultRole": "open",
      "offsets": [
        {
          "topic": "",
          "partition": "",
          "offsetValue": ""
        }
      ],
      "tlsEnabled": true,
      "group.id": "",
      "bootstrap.servers": [
        {
          "port": "9092",
          "host": "broker-0001.kafka-sec.mesos"
        }
      ],
      "enable.auto.commit": false,
      "vaultCertPath": "/v1/userland/certificates/sparta-server",
      "value.deserializer": "string",
      "kafkaProperties": [
        {
          "kafkaPropertyKey": "",
          "kafkaPropertyValue": ""
        }
      ],
      "vaultCertPassPath": "/v1/userland/passwords/sparta-server/keystore",
      "vaultTrustStorePassPath": "/v1/userland/passwords/sparta-server/keystore",
      "storeOffsetInKafka": true
    }
  },
  "outputs": [
    {
      "name": "elastic-output",
      "type": "ElasticSearch",
      "configuration": {
        "tlsEnabled": true,
        "nodes": [
          {
            "node": "coordinator-0-node.elasticsearchstratio.mesos",
            "httpPort": "31504"
          }
        ],
        "indexMapping": "",
        "enableAutoCreateIndex": true,
        "clusterName": "elasticsearch",
        "saveOptions": [
          {
            "saveOptionsKey": "",
            "saveOptionsValue": ""
          }
        ]
      }
    }
  ],
  "fragments": []
}