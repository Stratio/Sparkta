{
  "id": "72235b82-86ff-4914-8219-28b15bdfe063",
  "version": 1,
  "name": "policyexample",
  "description": "policy example",
  "settings": {
    "global": {
      "executionMode": "marathon",
      "streamTemporalTable": "stream",
      "driverUri": "/opt/sds/sparta/driver/sparta-driver.jar",
      "userPluginsJars": [{
        "jarPath": ""
      }],
      "initSqlSentences": [{
        "sentence": ""
      }]
    },
    "checkpointSettings": {
      "checkpointPath": "sparta/checkpoint",
      "autoDeleteCheckpoint": true,
      "addTimeToCheckpointPath": false
    },
    "streamingSettings": {
      "window": "6s",
      "remember": "44s"
    },
    "sparkSettings": {
      "master": "mesos://leader.mesos:5050",
      "sparkUser": "sparta",
      "sparkKerberos": false,
      "sparkHome": "/opt/spark/dist",
      "submitArguments": {
        "userArguments": [{
          "submitArgument": "",
          "submitValue": ""
        }],
        "deployMode": "client",
        "supervise": false
      },
      "sparkConf": {
        "sparkResourcesConf": {
          "coresMax": "2",
          "executorMemory": "1G",
          "executorCores": "1",
          "driverCores": "1",
          "driverMemory": "1G",
          "localityWait": "10",
          "taskMaxFailures": "8",
          "blockInterval": "200ms"
        },
        "sparkDockerConf": {
          "executorDockerImage": "qa.stratio.com/stratio/spark-krb-calico:2.1.0",
          "executorDockerVolumes": "/opt/mesosphere/packages/:/opt/mesosphere/packages/:ro,/opt/mesosphere/lib/:/opt/mesosphere/lib/:ro",
          "executorForcePullImage": false
        },
        "sparkMesosConf": {
          "mesosNativeJavaLibrary": "/opt/mesosphere/lib/libmesos.so",
          "mesosExecutorHome": "/opt/spark/dist"
        },
        "userSparkConf": [{
          "sparkConfKey": "",
          "sparkConfValue": ""
        }],
        "coarse": true,
        "stopGracefully": true,
        "parquetBinaryAsString": true
      }
    }
  },
  "transformations": [{
    "type": "Morphlines",
    "order": 0,
    "inputField": "_attachment_body",
    "outputFields": [{
      "name": "response",
      "type": "string"
    }],
    "configuration": {
      "morphline": {
        "id": "morphline1",
        "importCommands": ["org.kitesdk.**"],
        "commands": [{
          "readJson": {}
        }, {
          "extractJsonPaths": {
            "paths": {
              "response": "/response"
            }
          }
        }]
      }
    }
  }],
  "streamTriggers": [{
    "name": "stream trigger",
    "sql": "SELECT * FROM STREAM",
    "outputs": ["outputexample"],
    "overLast": "6s",
    "computeEvery": "6s",
    "configuration": {}
  }],
  "cubes": [{
    "name": "cube1",
    "dimensions": [{
      "name": "response",
      "field": "response",
      "precision": "identity",
      "type": "Default"
    }],
    "operators": [{
      "type": "Count",
      "name": "count1",
      "configuration": {}
    }],
    "writer": {
      "outputs": ["outputexample"],
      "dateType": "timestamp",
      "isAutoCalculatedId": false,
      "fixedMeasure": "localhost:6"
    },
    "triggers": [{
      "name": "CUBE TRIGGER",
      "sql": "SELECT * FROM STREAM",
      "outputs": ["outputexample"],
      "configuration": {}
    }]
  }],
  "outputs": [],
  "fragments": [{
    "id": "fb1bcd1e-8996-4fdf-a80e-67e63d4eb8ac",
    "fragmentType": "input",
    "name": "zx",
    "description": "Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data. It has a simple and flexible architecture based on streaming data flows.",
    "shortDescription": "Flume is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data.",
    "element": {
      "name": "in-Flume",
      "type": "Flume",
      "configuration": {
        "type": "pull",
        "addresses": [{
          "host": "localhost",
          "port": "11999"
        }],
        "maxBatchSize": "1000",
        "parallelism": "5"
      }
    }
  }, {
    "id": "0d59ccf5-8afe-46ff-9780-0b02d31ba506",
    "fragmentType": "output",
    "name": "outputexample",
    "description": "The Apache Cassandra database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data.",
    "shortDescription": "The Cassandra output uses the generic implementation with DataFrames.",
    "element": {
      "name": "in-Cassandra",
      "type": "Cassandra",
      "configuration": {
        "analyzer": "english",
        "refreshSeconds": "1",
        "connectionHost": "localhost",
        "cluster": "sparta",
        "replication_factor": "1",
        "keyspaceClass": "simpleStrategy",
        "dateFormat": "yyyy-mm-dd HH:mm",
        "keyspace": "sparta",
        "compactStorage": false,
        "connectionPort": "9042",
        "sparkProperties": [{
          "sparkPropertyKey": "spark.cassandra.connection.keep_alive_ms",
          "sparkPropertyValue": "180000"
        }]
      }
    }
  }]
}
