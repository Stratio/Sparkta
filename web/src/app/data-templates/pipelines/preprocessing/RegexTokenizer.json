{
  "name" : "RegexTokenizer",
  "icon" : "RegexTokenizer",
  "className" : "org.apache.spark.ml.feature.RegexTokenizer",
  "category" : "Transformers",
  "classPrettyName" : "RegexTokenizer",
  "arity" : [ "NullaryToNullary", "NullaryToUnary", "UnaryToNullary", "UnaryToUnary" ],
  "supportedEngines" : [ "Batch" ],
  "description" : "PipelineStage: type = feature",
  "properties" : [ {
    "propertyId" : "inputCol",
    "propertyName" : "Input column",
    "required" : true,
    "tooltip" : "The name of the column that will be the input of the RegexTokenizer process.",
    "qa" : "",
    "propertyType" : "select",
    "externalValueKey" : "externalInputs"
  }, {
    "propertyId" : "outputCol",
    "propertyName" : "Output column",
    "required" : true,
    "tooltip" : "The name of the column that will be the output of the RegexTokenizer process.",
    "qa" : "",
    "propertyType" : "text"
  }, {
    "propertyId" : "gaps",
    "propertyName" : "gaps",
    "required" : true,
    "tooltip" : "Set regex to match gaps or tokens",
    "qa" : "",
    "default" : true,
    "propertyType" : "boolean"
  }, {
    "propertyId" : "toLowercase",
    "propertyName" : "Convert all characters to lowercase before tokenizing",
    "required" : true,
    "tooltip" : "Whether or not convert all characters to lowercase before tokenizing.",
    "qa" : "",
    "default" : true,
    "propertyType" : "boolean"
  }, {
    "propertyId" : "minTokenLength",
    "propertyName" : "Min token length (>= 0)",
    "required" : true,
    "tooltip" : "Minimum token length (>= 0).",
    "qa" : "",
    "default" : "1",
    "propertyType" : "text"
  }, {
    "propertyId" : "pattern",
    "propertyName" : "Pattern for tokeninzing",
    "required" : true,
    "tooltip" : "Regex pattern used for tokenizing.",
    "qa" : "",
    "default" : "\\s+",
    "propertyType" : "text"
  } ]
}