{
  "name" : "LogisticRegression",
  "icon" : "LogisticRegression",
  "className" : "org.apache.spark.ml.classification.LogisticRegression",
  "category" : "Classification",
  "classPrettyName" : "LogisticRegression",
  "arity" : [ "NullaryToNullary", "NullaryToUnary", "UnaryToNullary", "UnaryToUnary" ],
  "supportedEngines" : [ "Batch" ],
  "description" : "PipelineStage: type = classification",
  "properties" : [ {
    "propertyId" : "featuresCol",
    "propertyName" : "Features column",
    "required" : true,
    "tooltip" : "The name of the column that will be the features of the LogisticRegression process.",
    "qa" : "",
    "default" : "",
    "propertyType" : "select",
    "externalValueKey" : "externalInputs"
  }, {
    "propertyId" : "labelCol",
    "propertyName" : "Label column",
    "required" : true,
    "tooltip" : "The name of the column that will be the label of the LogisticRegression process.",
    "qa" : "",
    "default" : "",
    "propertyType" : "select",
    "externalValueKey" : "externalInputs"
  }, {
    "propertyId" : "predictionCol",
    "propertyName" : "Prediction column",
    "required" : true,
    "tooltip" : "The name of the column that will be the prediction of the LogisticRegression process.",
    "qa" : "",
    "default" : "",
    "propertyType" : "text"
  }, {
    "propertyId" : "probabilityCol",
    "propertyName" : "Probability column",
    "required" : true,
    "tooltip" : "Column name for predicted class conditional probabilities. Note: Not all models output well-calibrated probability estimates! These probabilities should be treated as confidences, not precise probabilities",
    "qa" : "",
    "default" : "",
    "propertyType" : "text"
  }, {
    "propertyId" : "rawPredictionCol",
    "propertyName" : "Raw prediction column",
    "required" : true,
    "tooltip" : "The name of the column that will be the raw prediction (a.k.a. confidence) of the LogisticRegression process.",
    "qa" : "",
    "default" : "",
    "propertyType" : "text"
  }, {
    "propertyId" : "weightCol",
    "propertyName" : "Weight column",
    "required" : false,
    "tooltip" : "Weight column name. If this is not set or empty, we treat all instance weights as 1.0.",
    "qa" : "",
    "propertyType" : "select",
    "externalValueKey" : "externalInputs"
  }, {
    "propertyId" : "fitIntercept",
    "propertyName" : "Fit an intercept term",
    "required" : true,
    "tooltip" : "Whether or not to fit an intercept term.",
    "qa" : "",
    "default" : true,
    "propertyType" : "boolean"
  }, {
    "propertyId" : "standardization",
    "propertyName" : "Standardize training features before fit the model",
    "required" : true,
    "tooltip" : "Whether or not to standardize the training features before fitting the model",
    "qa" : "",
    "default" : true,
    "propertyType" : "boolean"
  }, {
    "propertyId" : "aggregationDepth",
    "propertyName" : "Aggregation depth (>= 2)",
    "required" : true,
    "tooltip" : "Suggested depth for treeAggregate (>= 2).",
    "qa" : "",
    "default" : "2",
    "propertyType" : "number"
  }, {
    "propertyId" : "elasticNetParam",
    "propertyName" : "ElasticNet mixing parameter (between 0 and 1)",
    "required" : true,
    "tooltip" : "The ElasticNet mixing parameter, in range [0, 1]. For alpha = 0, the penalty is an L2 penalty. For alpha = 1, it is an L1 penalty.",
    "qa" : "",
    "default" : "0.0",
    "propertyType" : "text"
  }, {
    "propertyId" : "family",
    "propertyName" : "Family",
    "required" : true,
    "tooltip" : "The name of family which is a description of the label distribution to be used in the model. Supported options: auto, binomial, multinomial.",
    "qa" : "",
    "default" : "auto",
    "propertyType" : "select",
    "values": [
      {
        "label": "auto",
        "value": "auto"
      },
      {
        "label": "binomial",
        "value": "binomial"
      },
      {
        "label": "multinomial",
        "value": "multinomial"
      }
    ]
  }, {
    "propertyId" : "maxIter",
    "propertyName" : "Max number of iterations (>= 0)",
    "required" : true,
    "tooltip" : "Maximum number of iterations (>= 0).",
    "qa" : "",
    "default" : "100",
    "propertyType" : "text"
  }, {
    "propertyId" : "regParam",
    "propertyName" : "Regularization (>= 0)",
    "required" : true,
    "tooltip" : "Regularization parameter (>= 0).",
    "qa" : "",
    "default" : "0.0",
    "propertyType" : "text"
  }, {
    "propertyId" : "threshold",
    "propertyName" : "Threshold (between 0 and 1)",
    "required" : true,
    "tooltip" : "Threshold in binary classification prediction, in range [0, 1]",
    "qa" : "",
    "default" : "0.5",
    "propertyType" : "text"
  }, {
    "propertyId" : "thresholds",
    "propertyName" : "Thresholds (separated by comma)",
    "required" : false,
    "tooltip" : "(comma separated values) Thresholds in multi-class classification to adjust the probability of predicting each class. Array must have length equal to the number of classes, with values > 0 excepting that at most one value may be 0. The class with largest value p/t is predicted, where p is the original probability of that class and t is the class's threshold.",
    "qa" : "",
    "propertyType" : "multiSelect"
  }, {
    "propertyId" : "lowerBoundsOnCoefficients",
    "propertyName" : "Lower bounds on coefficients",
    "required" : false,
    "tooltip" : "The lower bounds on coefficients if fitting under bound constrained optimization.",
    "qa" : "",
    "propertyType" : "text"
  }, {
    "propertyId" : "lowerBoundsOnIntercepts",
    "propertyName" : "Lower bounds on intercepts",
    "required" : false,
    "tooltip" : "The lower bounds on intercepts if fitting under bound constrained optimization.",
    "qa" : "",
    "propertyType" : "text",
    "visible": [
      [
        {
          "propertyId": "fitIntercept",
          "value": true
        }
      ]
    ]
  }, {
    "propertyId" : "upperBoundsOnCoefficients",
    "propertyName" : "Upper bounds on coefficients",
    "required" : false,
    "tooltip" : "The upper bounds on coefficients if fitting under bound constrained optimization.",
    "qa" : "",
    "propertyType" : "text"
  }, {
    "propertyId" : "upperBoundsOnIntercepts",
    "propertyName" : "Upper bounds on intercepts",
    "required" : false,
    "tooltip" : "The upper bounds on intercepts if fitting under bound constrained optimization.",
    "qa" : "",
    "propertyType" : "text",
    "visible": [
      [
        {
          "propertyId": "fitIntercept",
          "value": true
        }
      ]
    ]
  }, {
    "propertyId" : "tol",
    "propertyName" : "Convergence tolerance (>= 0)",
    "required" : true,
    "tooltip" : "The convergence tolerance for iterative algorithms (>= 0).",
    "qa" : "",
    "default" : "1.0E-6",
    "propertyType" : "text"
  } ]
}
