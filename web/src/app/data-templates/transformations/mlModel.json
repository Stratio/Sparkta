{
   "name": "MlModel",
   "icon": "MlModel",
   "category": "Spark Native",
   "className": "MlModelTransformStep",
   "supportedEngines": [
      "Streaming",
      "Batch"
   ],
   "arity": [
      "UnaryToNary"
   ],
   "supportedDataRelations": [
      "ValidData"
   ],
   "classPrettyName": "MlModel",
   "description": "Apply machine learning models to input streams",
   "properties": [
     {
       "propertyId": "selectMlType",
       "propertyName": "_SELECT_TYPE_",
       "required": true,
       "propertyType": "select",
       "default": "ML_MODEL_URL",
       "values": [
         {
           "label": "MlModel by Url",
           "value": "ML_MODEL_URL"
         },
         {
           "label": "MlModel by path",
           "value": "ML_MODEL_PATH"
         }
       ],
       "qa": "workflow-transformation-ml-type"
     },
     {
       "propertyId": "model",
       "propertyName": "_MODEL_",
       "propertyType": "select",
       "externalValueKey": "mlModelsList",
       "required": false,
       "visible": [
        [
          {
            "propertyId": "selectMlType",
            "value": "ML_MODEL_URL"
          }
        ]
       ],
       "tooltip": "Model name to apply. This model must be stored in the Intelligence model repository.",
       "qa": "fragment-details-mlmodel-model"
     },
     {
       "propertyId": "path",
       "propertyName": "_PATH_",
       "propertyType": "text",
       "required": false,
       "visible": [
         [
           {
             "propertyId": "selectMlType",
             "value": "ML_MODEL_PATH"
           }
         ]
       ],
       "tooltip": "Path to a MlModel.",
       "qa": "fragment-details-mlmodel-path"
     },
      {
         "propertyId": "inputSchemas",
         "propertyName": "_INPUTS_TRIGGER_SCHEMA_",
         "propertyType": "list",
         "required": false,
         "complexForm": true,
         "tooltip": "Section that allows the user to define incoming steps schemas. Once defined properly, the schema calculation for all incoming inputs will be avoided thus increasing the workflow performance and type-safety.",
         "qa": "fragment-details-schema-fields",
         "fields": [
            {
               "propertyId": "stepName",
               "propertyName": "_INPUT_STEP_NAME_",
               "propertyType": "text",
               "showInputSteps": true,
               "required": true,
               "tooltip": "Incoming step name.",
               "width": 8,
               "float": false,
               "qa": "fragment-details-field-name"
            },
            {
               "propertyId": "schema",
               "propertyName": "_DESERIALIZER_SCHEMA_",
               "propertyType": "textarea",
               "contentType": "JSON",
               "width": 12,
               "tooltip": "Input schema either expressed in JSON/Spark format or by providing a valid sample.",
               "required": true,
               "qa": "fragment-details-field-query"
            }
         ]
      }
   ]
}
