{
   "name": "DropNulls",
   "icon": "DropNulls",
   "category": "Row",
   "className": "DropNullsTransformStep",
   "classPrettyName": "DropNulls",
   "arity": [
      "UnaryToNary"
   ],
   "supportedEngines": [
      "Streaming",
      "Batch"
   ],
   "supportedDataRelations": [
      "ValidData",
      "DiscardedData"
   ],
   "description": "Clean/Drop rows that contains null or NaN values in their columns",
   "properties": [
      {
         "propertyId": "cleanMode",
         "propertyName": "_CLEAN_MODE_",
         "required": true,
         "propertyType": "select",
         "default": "ANY",
         "values": [
            {
               "label": "Any",
               "value": "ANY"
            },
            {
               "label": "All",
               "value": "ALL"
            }
         ],
         "tooltip": "If 'Any' is selected, the transformation will drop rows containing null or NaN value in at least one column. If 'All' is chosen, only the rows containing  null or NaN values for all the specified columns will be dropped.",
         "qa": "fragment-details-cleanNulls-cleanMode"
      },
      {
         "propertyId": "columns",
         "propertyName": "_COLUMNS_",
         "width": 12,
         "propertyType": "list",
         "required": false,
         "tooltip": "Columns to be checked. If this section is left blank, the transformation will check for null values in all the fields composing the input data.",
         "qa": "fragment-details-cleanNulls-columns",
         "fields": [
            {
               "propertyId": "name",
               "propertyName": "_COLUMN_NAME_",
               "propertyType": "text",
               "width": 8,
               "required": true,
               "tooltip": "Name of the column",
               "qa": "fragment-details-cleanNulls-columns-name"
            }
         ]
      },
      {
         "propertyId": "inputSchemas",
         "propertyName": "_INPUTS_TRIGGER_SCHEMA_",
         "propertyType": "list",
         "required": false,
         "complexForm": true,
         "tooltip": "Section that allows the user to define incoming steps schemas. Once defined properly, the schema calculation for all incoming inputs will be avoided thus increasing the workflow performance and type-safety.",
         "qa": "fragment-details-schema-fields",
         "fields": [
            {
               "propertyId": "stepName",
               "propertyName": "_INPUT_STEP_NAME_",
               "propertyType": "text",
               "required": true,
               "tooltip": "Incoming step name.",
               "width": 3,
               "float": false,
               "qa": "fragment-details-field-name"
            },
            {
               "propertyId": "schema",
               "propertyName": "_DESERIALIZER_SCHEMA_",
               "propertyType": "textarea",
               "contentType": "JSON",
               "width": 8,
               "tooltip": "Input schema either expressed in JSON/Spark format or by providing a valid sample.",
               "required": true,
               "qa": "fragment-details-field-query"
            }
         ]
      },
      {
         "propertyId": "whenRowError",
         "propertyName": "_TRANSFORMATION_WHEN_ROW_ERROR_",
         "propertyType": "select",
         "values": [
            {
               "label": "Error",
               "value": "RowError"
            },
            {
               "label": "Discard",
               "value": "RowDiscard"
            }
         ],
         "tooltip": "Specifies which policy to follow when a row-level error arises. If 'Error' is chosen, the application will stop and the error trace will be written to the log. If 'Discard' is chosen, no error will be prompted and the row will be omitted.",
         "qa": "workflow-transformation-whenRowError"
      },
      {
         "propertyId": "whenFieldError",
         "propertyName": "_TRANSFORMATION_WHEN_FIELD_ERROR_",
         "propertyType": "select",
         "values": [
            {
               "label": "Error",
               "value": "FieldError"
            },
            {
               "label": "Null",
               "value": "Null"
            }
         ],
         "tooltip": "Specifies which policy to follow when a field-level error arises. If 'Error' is chosen, the application will stop and the error trace will be written to the log. If 'Null' is chosen, no error will be prompted and the field value will be set to null.",
         "qa": "workflow-transformation-whenFieldError"
      }
   ]
}
