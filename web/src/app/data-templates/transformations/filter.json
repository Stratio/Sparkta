{
   "name": "Filter",
   "icon": "Filter",
   "category": "SQL",
   "className": "FilterTransformStep",
   "classPrettyName": "Filter",
   "arity": [
      "UnaryToNary"
   ],
   "supportedEngines": [
      "Streaming",
      "Batch"
   ],
   "supportedDataRelations": [
      "ValidData",
      "DiscardedData"
   ],
   "description": "Filter the events in the input DStream",
   "properties": [
      {
         "propertyId": "filterExp",
         "propertyName": "_FILTER_EXPRESSION_",
         "propertyType": "textarea",
         "contentType": "JSON",
         "width": 12,
         "required": false,
         "tooltip": "Filter the events based in one expression, support UDFs, logical operators, etc ...",
         "qa": "fragment-details-filter-expression"
      },
      {
         "propertyId": "inputSchemas",
         "propertyName": "_INPUTS_TRIGGER_SCHEMA_",
         "propertyType": "list",
         "required": false,
         "complexForm": true,
         "width": 12,
         "tooltip": "Schema definition for steps",
         "qa": "fragment-details-schema-fields",
         "fields": [
            {
               "propertyId": "stepName",
               "propertyName": "_INPUT_STEP_NAME_",
               "propertyType": "text",
               "required": true,
               "tooltip": "Step name",
               "width": 4,
               "float": false,
               "qa": "fragment-details-field-name"
            },
            {
               "propertyId": "schema",
               "propertyName": "_DESERIALIZER_SCHEMA_",
               "propertyType": "textarea",
               "contentType": "JSON",
               "width": 12,
               "tooltip": "Schema in json/Spark format or from example",
               "required": true,
               "qa": "fragment-details-field-query"
            }
         ]
      }
   ]
}