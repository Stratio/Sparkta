{
  "name": "Case",
  "icon": "Case",
  "category": "Column",
  "className": "CaseTransformStep",
  "classPrettyName": "Case",
  "arity": [
    "UnaryToNary"
  ],
  "supportedEngines": [
    "Streaming",
    "Batch"
  ],
  "supportedDataRelations": [
    "ValidData"
  ],
  "description": "Replace or create a new Column due to a condition",
  "properties": [
    {
      "propertyId": "inputColumns",
      "propertyName": "_INPUT_COLUMN_",
      "propertyType": "list",
      "complexForm": true,
      "required": true,
      "tooltip": "Schema definition for replace values in a new column or current one.",
      "qa": "fragment-details-case-fields",
      "fields": [
        {
          "propertyId": "caseExpression",
          "propertyName": "_CASE_EXPRESSION_",
          "propertyType": "textarea",
          "contentType": "SQL",
          "required": true,
          "width": 12,
          "qa": "fragment-details-field-name"
        },
        {
          "propertyId": "valueType",
          "propertyName": "_VALUE_TYPE_",
          "propertyType": "select",
          "default": "VALUE",
          "required": true,
          "float": false,
          "width": 4,
          "values": [
            {
              "label": "By value",
              "value": "VALUE"
            },
            {
              "label": "By column",
              "value": "COLUMN"
            }
          ],
          "qa": "workflow-transformation-select-type"
        },
        {
          "propertyId": "value",
          "propertyName": "_VALUE_",
          "propertyType": "text",
          "contentType": "text",
          "width": 8,
          "required": true,
          "visible": [
            [
              {
                "propertyId": "valueType",
                "value": "VALUE"
              }
            ]
          ],
          "tooltip": "Field to insert the new value on all the fields on a column due to a condition'",
          "qa": "fragment-details-select-case-expression"
        },
        {
          "propertyId": "column",
          "propertyName": "_COLUMN_",
          "propertyType": "text",
          "showSchemaFields": true,
          "required": true,
          "width": 4,
          "visible": [
            [
              {
                "propertyId": "valueType",
                "value": "COLUMN"
              }
            ]
          ],
          "tooltip": "Column name on input table",
          "qa": "fragment-details-select-return-column"
        }
      ]
    },
    {
      "propertyId": "outputDataType",
      "propertyName": "_OUTPUT_TYPE_",
      "propertyType": "select",
      "required": true,
      "values": [
        {
          "label": "String",
          "value": "string"
        },
        {
          "label": "Long",
          "value": "long"
        },
        {
          "label": "Float",
          "value": "float"
        },
        {
          "label": "Double",
          "value": "double"
        },
        {
          "label": "Integer",
          "value": "integer"
        },
        {
          "label": "Boolean",
          "value": "boolean"
        },
        {
          "label": "Binary",
          "value": "binary"
        },
        {
          "label": "Date",
          "value": "date"
        },
        {
          "label": "Timestamp",
          "value": "timestamp"
        }
      ],
      "width": 4,
      "default": "string",
      "float": false,
      "tooltip": "Type of data",
      "qa": "fragment-details-select-case-expression"
    },
    {
      "propertyId": "otherwiseExpression",
      "propertyName": "_OTHERWISE_EXPRESSION_",
      "propertyType": "textarea",
      "required": false,
      "width": 8,
      "tooltip": "Allow the user what to do in case some fields does not match the case expression",
      "qa": "fragment-details-field-otherwise",
      "float": false
    },
    {
      "propertyId": "outputStrategy",
      "propertyName": "_OUTPUT_STRATEGY_",
      "propertyType": "select",
      "custom": true,
      "required": true,
      "width": 4,
      "values": [
        {
          "label": "New column",
          "value": "NEWCOLUMN"
        },
        {
          "label": "Replace column",
          "value": "REPLACECOLUMN"
        }
      ],
      "qa": "fragment-details-field"
    },
    {
      "propertyId": "aliasNewColumn",
      "propertyName": "_JOIN_RETURN_ALIAS_",
      "propertyType": "text",
      "required": true,
      "width": 4,
      "tooltip": "Name of the column to replace",
      "visible": [
        [
          {
            "propertyId": "outputStrategy",
            "value": "NEWCOLUMN"
          }
        ]
      ],
      "qa": "fragment-details-field-alias"
    },
    {
      "propertyId": "columnToReplace",
      "propertyName": "_COLUMN_",
      "propertyType": "text",
      "showSchemaFields": true,
      "required": true,
      "width": 4,
      "visible": [
        [
          {
            "propertyId": "outputStrategy",
            "value": "REPLACECOLUMN"
          }
        ]
      ],
      "tooltip": "Column name on input table",
      "qa": "fragment-details-select-replace-column"
    },
    {
      "propertyId": "inputSchemas",
      "propertyName": "_INPUTS_TRIGGER_SCHEMA_",
      "propertyType": "list",
      "required": false,
      "complexForm": true,
      "tooltip": "Section that allows the user to define incoming steps schemas. If defined properly this would result in avoiding doing the schema calculation for all defined incoming inputs.",
      "qa": "fragment-details-schema-fields",
      "fields": [
        {
          "propertyId": "stepName",
          "propertyName": "_INPUT_STEP_NAME_",
          "propertyType": "text",
          "showInputSteps": true,
          "required": true,
          "float": false,
          "tooltip": "Incoming step name.",
          "width": 8,
          "qa": "fragment-details-field-name"
        },
        {
          "propertyId": "schema",
          "propertyName": "_DESERIALIZER_SCHEMA_",
          "propertyType": "textarea",
          "contentType": "JSON",
          "width": 12,
          "tooltip": "Schema expressed in JSON/Spark format or from a valid sample from the input being defined.",
          "required": true,
          "qa": "fragment-details-field-query"
        }
      ]
    }
  ]
}
