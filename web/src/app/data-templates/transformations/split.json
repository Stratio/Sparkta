{
   "name": "Split",
   "icon": "Split",
   "category": "Row",
   "className": "SplitTransformStep",
   "supportedEngines": [
      "Streaming",
      "Batch"
   ],
   "supportedDataRelations": [
      "ValidData",
      "DiscardedData"
   ],
   "classPrettyName": "Split",
   "arity": [
      "UnaryToNary"
   ],
   "description": "Split values according to a selected method",
   "properties": [
      {
         "propertyId": "inputField",
         "propertyName": "_INPUT_FIELD_",
         "propertyType": "text",
         "required": true,
         "tooltip": "Field that contains the string to be split",
         "qa": "fragment-details-split-fieldString"
      },
      {
         "propertyId": "fieldsPreservationPolicy",
         "propertyName": "_FIELDS_PRESERVATION_",
         "required": true,
         "propertyType": "select",
         "default": "REPLACE",
         "values": [
            {
               "label": "Replacing input field",
               "value": "REPLACE"
            },
            {
               "label": "Appending extracted",
               "value": "APPEND"
            },
            {
               "label": "Keeping just extracted",
               "value": "JUST_EXTRACTED"
            }
         ],
         "qa": "workflow-transformation-csv-fieldsPreservationPolicy"
      },
      {
         "propertyId": "splitMethod",
         "propertyName": "_SPLIT_METHOD_",
         "propertyType": "select",
         "width": 3,
         "qa": "workflow-transformation-split-splitMethod",
         "values": [
            {
               "label": "By index",
               "value": "BYINDEX"
            },
            {
               "label": "By regex",
               "value": "BYREGEX"
            },
            {
               "label": "By char",
               "value": "BYCHAR"
            }
         ],
         "default": "BYINDEX",
         "required": true
      },
      {
         "propertyId": "byRegexPattern",
         "propertyName": "_BYREGEX_PATTERN_",
         "propertyType": "text",
         "width": 3,
         "required": false,
         "tooltip": "Insert the regular expression that should be used to split the field (e.g. [.])",
         "visible": [
            [
               {
                  "propertyId": "splitMethod",
                  "value": "BYREGEX"
               }
            ]
         ],
         "qa": "workflow-transformation-split-byRegexPattern"
      },
      {
         "propertyId": "byCharPattern",
         "propertyName": "_BYCHAR_PATTERN_",
         "propertyType": "text",
         "width": 3,
         "required": false,
         "tooltip": "Insert the character that should be used to split the field (e.g. \\t, |, $)",
         "visible": [
            [
               {
                  "propertyId": "splitMethod",
                  "value": "BYCHAR"
               }
            ]
         ],
         "qa": "workflow-transformation-split-byCharPattern"
      },
      {
         "propertyId": "byIndexPattern",
         "propertyName": "_BYINDEX_PATTERN_",
         "propertyType": "text",
         "width": 3,
         "required": false,
         "tooltip": "Insert the comma-separated indices that should be used to split the field (e.g. 1,3,7)[NOTE: indexes start at 0]",
         "visible": [
            [
               {
                  "propertyId": "splitMethod",
                  "value": "BYINDEX"
               }
            ]
         ],
         "qa": "workflow-transformation-split-byIndexPattern"
      },
      {
         "propertyId": "excludeIndexes",
         "propertyName": "_EXCLUDE_INDEXES_",
         "propertyType": "boolean",
         "width": 3,
         "default": false,
         "tooltip": "If checked, the chars found at the positions specified for the splitting will be discarded",
         "visible": [
            [
               {
                  "propertyId": "splitMethod",
                  "value": "BYINDEX"
               }
            ]
         ],
         "qa": "policy-transformation-split-excludeIndexes"
      },
      {
         "propertyId": "schema.inputMode",
         "propertyName": "_INPUT_SCHEMA_FROM_",
         "propertyType": "select",
         "required": true,
         "values": [
            {
               "label": "Fields",
               "value": "FIELDS"
            },
            {
               "label": "Spark format",
               "value": "SPARKFORMAT"
            }
         ],
         "default": "FIELDS",
         "qa": "fragment-details-input-schema-type"
      },
      {
         "propertyId": "schema.fields",
         "propertyName": "_FIELDS_DEFINITION_",
         "propertyType": "list",
         "visible": [
            [
               {
                  "propertyId": "schema.inputMode",
                  "value": "FIELDS"
               }
            ]
         ],
         "required": true,
         "tooltip": "Schema definition from list of fields",
         "qa": "fragment-details-split-fields",
         "fields": [
            {
               "propertyId": "name",
               "propertyName": "_NAME_",
               "propertyType": "text",
               "required": true,
               "width": 3,
               "qa": "fragment-details-field-name"
            },
            {
               "propertyId": "type",
               "propertyName": "_TYPE_",
               "propertyType": "select",
               "custom": true,
               "required": true,
               "width": 3,
               "values": [
                  {
                     "label": "String",
                     "value": "string"
                  },
                  {
                     "label": "Long",
                     "value": "long"
                  },
                  {
                     "label": "Float",
                     "value": "float"
                  },
                  {
                     "label": "Double",
                     "value": "double"
                  },
                  {
                     "label": "Integer",
                     "value": "integer"
                  },
                  {
                     "label": "Boolean",
                     "value": "boolean"
                  },
                  {
                     "label": "Binary",
                     "value": "binary"
                  },
                  {
                     "label": "Date",
                     "value": "date"
                  },
                  {
                     "label": "Timestamp",
                     "value": "timestamp"
                  },
                  {
                     "label": "Array(Double)",
                     "value": "arraydouble"
                  },
                  {
                     "label": "Array(String)",
                     "value": "arraystring"
                  },
                  {
                     "label": "Array(Long)",
                     "value": "arraylong"
                  },
                  {
                     "label": "Array(Integer)",
                     "value": "arrayinteger"
                  },
                  {
                     "label": "Array(Map(String, String))",
                     "value": "arraymapstringstring"
                  },
                  {
                     "label": "Map(String, Long)",
                     "value": "mapstringlong"
                  },
                  {
                     "label": "Map(String, Double)",
                     "value": "mapstringdouble"
                  },
                  {
                     "label": "Map(String, Integer)",
                     "value": "mapstringint"
                  },
                  {
                     "label": "Map(String, String)",
                     "value": "mapstringstring"
                  }
               ],
               "default": "string",
               "qa": "fragment-details-field-type"
            },
            {
               "propertyId": "nullable",
               "propertyName": "_NULLABLE_",
               "propertyType": "boolean",
               "default": true,
               "required": true,
               "qa": "fragment-details-field-nullable"
            }
         ]
      },
      {
         "propertyId": "schema.sparkSchema",
         "propertyName": "_SPARK_SCHEMA_",
         "propertyType": "textarea",
         "contentType": "JSON",
         "width": 8,
         "visible": [
            [
               {
                  "propertyId": "schema.inputMode",
                  "value": "SPARKFORMAT"
               }
            ]
         ],
         "required": true,
         "tooltip": "Spark schema for the fields split",
         "qa": "fragment-details-split-spark-schema"
      },
      {
         "propertyId": "inputSchemas",
         "propertyName": "_INPUTS_TRIGGER_SCHEMA_",
         "propertyType": "list",
         "required": false,
         "complexForm": true,
         "width": 8,
         "tooltip": "Schema definition for steps",
         "qa": "fragment-details-schema-fields",
         "fields": [
            {
               "propertyId": "stepName",
               "propertyName": "_INPUT_STEP_NAME_",
               "propertyType": "text",
               "required": true,
               "tooltip": "Step name",
               "width": 3,
               "float": false,
               "qa": "fragment-details-field-name"
            },
            {
               "propertyId": "schema",
               "propertyName": "_DESERIALIZER_SCHEMA_",
               "propertyType": "textarea",
               "contentType": "JSON",
               "width": 8,
               "tooltip": "Schema in json/Spark format or from example",
               "required": true,
               "qa": "fragment-details-field-query"
            }
         ]
      },
      {
         "propertyId": "whenRowError",
         "propertyName": "_TRANSFORMATION_WHEN_ROW_ERROR_",
         "propertyType": "select",
         "values": [
            {
               "label": "Error",
               "value": "RowError"
            },
            {
               "label": "Discard",
               "value": "RowDiscard"
            }
         ],
         "qa": "workflow-transformation-whenRowError"
      },
      {
         "propertyId": "whenFieldError",
         "propertyName": "_TRANSFORMATION_WHEN_FIELD_ERROR_",
         "propertyType": "select",
         "values": [
            {
               "label": "Error",
               "value": "FieldError"
            },
            {
               "label": "Null",
               "value": "Null"
            }
         ],
         "qa": "workflow-transformation-whenFieldError"
      }
   ]
}