  {
     "name": "CSV",
     "icon": "CSV",
     "className": "CSVTransformStep",
     "classPrettyName": "CSV",
     "description": "Parsing input field with csv format to selected output fields",
     "properties": [
        {
           "propertyId": "inputField",
           "propertyName": "_INPUT_FIELD_",
           "propertyType": "text",
           "required": true,
           "tooltip": "Filed that contains the csv string",
           "qa": "fragment-details-csv-fieldsString"
        },
        {
           "propertyId": "fields",
           "propertyName": "_FIELDS_DEFINITION_",
           "propertyType": "list",
           "required": true,
           "tooltip": "Schema definition from list of fields",
           "qa": "fragment-details-csv-fields",
           "fields": [
              {
                 "propertyId": "name",
                 "propertyName": "_NAME_",
                 "propertyType": "text",
                 "required": true,
                 "qa": "fragment-details-field-name"
              },
              {
                 "propertyId": "type",
                 "propertyName": "_TYPE_",
                 "propertyType": "select",
                 "custom": true,
                 "required": true,
                 "values": [
                    {
                       "label": "String",
                       "value": "string"
                    },
                    {
                       "label": "Long",
                       "value": "long"
                    },
                    {
                       "label": "Float",
                       "value": "float"
                    },
                    {
                       "label": "Double",
                       "value": "double"
                    },
                    {
                       "label": "Integer",
                       "value": "integer"
                    },
                    {
                       "label": "Boolean",
                       "value": "boolean"
                    },
                    {
                       "label": "Binary",
                       "value": "binary"
                    },
                    {
                       "label": "Date",
                       "value": "date"
                    },
                    {
                       "label": "Timestamp",
                       "value": "timestamp"
                    },
                    {
                       "label": "Array(Double)",
                       "value": "arraydouble"
                    },
                    {
                       "label": "Array(String)",
                       "value": "arraystring"
                    },
                    {
                       "label": "Array(Long)",
                       "value": "arraylong"
                    },
                    {
                       "label": "Array(Integer)",
                       "value": "arrayinteger"
                    },
                    {
                       "label": "Array(Map(String, String))",
                       "value": "arraymapstringstring"
                    },
                    {
                       "label": "Map(String, Long)",
                       "value": "mapstringlong"
                    },
                    {
                       "label": "Map(String, Double)",
                       "value": "mapstringdouble"
                    },
                    {
                       "label": "Map(String, Integer)",
                       "value": "mapstringint"
                    },
                    {
                       "label": "Map(String, String)",
                       "value": "mapstringstring"
                    }
                 ],
                 "default": "string",
                 "qa": "fragment-details-field-type"
              },
              {
                 "propertyId": "nullable",
                 "propertyName": "_NULLABLE_",
                 "propertyType": "boolean",
                 "default": true,
                 "required": true,
                 "qa": "fragment-details-field-nullable"
              }
           ]
        },
        {
           "propertyId": "addAllInputFields",
           "propertyName": "_ADD_ALL_INPUT_FIELDS_",
           "propertyType": "boolean",
           "default": true,
           "tooltip": "If checked, the output fields contains all the input fields",
           "qa": "workflow-transformation-csv-addAllInputFields"
        },
        {
           "propertyId": "delimiter",
           "propertyName": "_DELIMITER_",
           "propertyType": "text",
           "required": true,
           "tooltip": "Delimiter character in csv string",
           "qa": "fragment-details-csv-delimiter"
        },
        {
           "propertyId": "splitLimit",
           "propertyName": "_SPLIT_LIMIT_",
           "propertyType": "text",
           "required": true,
           "tooltip": "",
           "qa": "fragment-details-csv-splitLimit"
        },
        {
           "propertyId": "delimiterType",
           "propertyName": "_DELIMITER_TYPE_",
           "propertyType": "select",
           "default": "Error",
           "required": true,
           "values": [
              {
                 "label": "Character",
                 "value": "CHARACTER"
              },
              {
                 "label": "Regex",
                 "value": "REGEX"
              }
           ],
           "qa": "workflow-transformation-csv-delimiterType"
        },
        {
           "propertyId": "whenError",
           "propertyName": "_TRANSFORMATION_WHEN_ERROR_",
           "propertyType": "select",
           "default": "Error",
           "required": true,
           "values": [
              {
              "label": "Error",
              "value": "Error"
              },
              {
                 "label": "Discard",
                 "value": "Discard"
              },
              {
                 "label": "Null",
                 "value": "Null"
              }
           ],
           "qa": "workflow-transformation-csv-whenError"
        }
     ]
  }
