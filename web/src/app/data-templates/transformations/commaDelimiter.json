{
  "name": "CommaDelimiter",
  "icon": "CommaDelimiter",
  "category": "Column",
  "className": "CommaDelimiterTransformStep",
  "classPrettyName": "CommaDelimiter",
  "arity": [
    "UnaryToNary"
  ],
  "supportedEngines": [
    "Streaming",
    "Batch"
  ],
  "supportedDataRelations": [
    "ValidData"
  ],
  "description": "Include a decimal separator at a selected position from the end of a string or the las integer",
  "properties": [
    {
      "propertyId": "columnsToDelimit",
      "propertyName": "_COLUMNS_TO_DELIMIT_",
      "propertyType": "list",
      "required": true,
      "tooltip": "List of columns to set a delimiter.",
      "qa": "fragment-details-delimiter-fields",
      "fields": [
        {
          "propertyId": "name",
          "propertyName": "_NAME_",
          "propertyType": "text",
          "showSchemaFields": true,
          "required": true,
          "float": false,
          "width": 6,
          "qa": "fragment-details-field-name"
        },
        {
          "propertyId": "decimalLength",
          "propertyName": "_LENGTH_DECIMAL_",
          "propertyType": "text",
          "required": true,
          "width": 2,
          "tooltip": "Size of the decimal part.",
          "qa": "fragment-details-length-decimal"
        },
        {
          "propertyId": "decimalSeparator",
          "propertyName": "_SEPARATOR_DECIMAL_",
          "propertyType": "text",
          "required": true,
          "default": ".",
          "width": 3,
          "tooltip": "Separator to use. Default '.'",
          "qa": "workflow-transformation-separator-decimal"
        },
        {
          "propertyId": "displacementDirection",
          "propertyName": "_DELIMITER_DIRECTION_",
          "propertyType": "select",
          "required": true,
          "default": "COMMA_LEFT",
          "width": 3,
          "values": [
            {
              "label": "Left",
              "value": "COMMA_LEFT"
            },
            {
              "label": "Right",
              "value": "COMMA_RIGHT"
            }
          ],
          "qa": "workflow-transformation-comma-direction"

        }
      ]
    },
    {
      "propertyId": "inputSchemas",
      "propertyName": "_INPUTS_TRIGGER_SCHEMA_",
      "propertyType": "list",
      "required": false,
      "complexForm": true,
      "tooltip": "Section that allows the user to define incoming steps schemas. Once defined properly, the schema calculation for all incoming inputs will be avoided thus increasing the workflow performance and type-safety.",
      "qa": "fragment-details-schema-fields",
      "fields": [
        {
          "propertyId": "stepName",
          "propertyName": "_INPUT_STEP_NAME_",
          "propertyType": "text",
          "showInputSteps": true,
          "required": true,
          "tooltip": "Incoming step name.",
          "width": 8,
          "float": false,
          "qa": "fragment-details-field-name"
        },
        {
          "propertyId": "schema",
          "propertyName": "_DESERIALIZER_SCHEMA_",
          "propertyType": "textarea",
          "contentType": "JSON",
          "width": 12,
          "tooltip": "Input schema either expressed in JSON/Spark format or by providing a valid sample.",
          "required": true,
          "qa": "fragment-details-field-query"
        }
      ]
    }
  ]
}

