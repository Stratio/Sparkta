  {
    "name": "Postgres",
     "icon": "Postgres",
     "className": "PostgresOutputStep",
    "classPrettyName": "Postgres",
     "arity": ["NullaryToNullary", "NaryToNullary"],
     "supportedEngines": ["Streaming", "Batch"],
    "description": "Given a URL to a Postgres Database, it is possible to write data into multiple tables whose names will be retrieved from the connected previous steps configuration. In order to improve the JDBC writing performance it would be better to use the Postgres native function COPY IN.",
    "properties": [
      {
        "propertyId": "url",
        "propertyName": "_JDBC_URL_",
        "propertyType": "text",
        "default": "{{{Environment.POSTGRES_URL}}}",
        "required": true,
        "tooltip": "Url to connect to a Postgres Database.",
        "qa": "fragment-details-postgres-url"
      },
      {
        "propertyId": "driver",
        "propertyName": "_JDBC_DRIVER_",
        "propertyType": "text",
        "required": false,
        "tooltip": "Driver class sent to the Spark configuration. Default value set to 'org.postgresql.Driver'.",
        "qa": "fragment-details-jdbc-driver"
      },
      {
        "propertyId": "isolationLevel",
        "propertyName": "_ISOLATION_LEVEL_",
        "propertyType": "select",
        "values": [
          {
            "label": "None",
            "value": "NONE"
          },
          {
            "label": "Read Uncommitted",
            "value": "READ_UNCOMMITTED"
          },
          {
            "label": "Read Committed",
            "value": "READ_COMMITTED"
          },
          {
            "label": "Repeatable Read",
            "value": "REPEATABLE_READ"
          },
          {
            "label": "Serializable",
            "value": "SERIALIZABLE"
          }
        ],
        "default": "READ_UNCOMMITTED",
        "required": true,
        "tooltip": "Sets the isolation level when saving the data in the database.",
        "qa": "fragment-postgres-isolation-level"
      },
      {
        "propertyId": "postgresSaveMode",
        "propertyName": "_POSTGRES_SAVE_MODE_",
        "propertyType": "select",
        "values": [
          {
            "label": "Batch statement",
            "value": "STATEMENT"
          },
           {
              "label": "Single statement",
              "value": "SINGLE_STATEMENT"
           },
           {
              "label": "One transaction",
              "value": "ONE_TRANSACTION"
           },
          {
            "label": "CopyIn",
            "value": "COPYIN"
          }
        ],
        "default": "STATEMENT",
        "required": true,
        "tooltip": "Sets the save mode used by Postgres to persist the resulting transformed data. 'Batch statement' groups and saves the data in n batches defined by the user. 'Single statement': one transaction will be used per every row of data to be saved. 'One transaction': All the data will be saved with only one transaction. 'Copy in': the data will be grouped in bulks and sent into the PostgreSQL via the native COPY IN function.",
        "qa": "fragment-postgres-save-mode"
      },
       {
          "propertyId": "batchsize",
          "propertyName": "_JDBC_BATCH_SIZE_",
          "propertyType": "text",
          "visible": [
             [
                {
                   "propertyId": "postgresSaveMode",
                   "value": "STATEMENT"
                }
             ]
          ],
          "default": "1000",
          "required": false,
          "tooltip": "Number of upsert statements that are sent to the database on each partition.",
          "qa": "fragment-details-jdbc-batch-size"
       },
       {
          "propertyId": "delimiter",
          "propertyName": "_POSTGRES_DELIMITER_",
          "propertyType": "text",
          "visible": [
             [
                {
                   "propertyId": "postgresSaveMode",
                   "value": "COPYIN"
                }
             ]
          ],
          "default": "\t",
          "required": false,
          "tooltip": "Delimiter character used when transforming to CSV. It is mandatory that this character is not contained in the events being saved.",
          "qa": "fragment-details-postgres-delimiter"
       },
      {
        "propertyId": "newLineSubstitution",
        "propertyName": "_POSTGRES_NEW_LINE_SUBSTITUTION_",
        "propertyType": "text",
        "default": " ",
        "visible": [
          [
            {
              "propertyId": "postgresSaveMode",
              "value": "COPYIN"
            }
          ]
        ],
        "required": false,
        "tooltip": "Character used to substitute the Linefeed (new line) character in the events. Default value set to a whitespace.",
        "qa": "fragment-details-postgres-new-line-substitution"
      },
       {
          "propertyId": "newQuotesSubstitution",
          "propertyName": "_POSTGRES_NEW_QUOTE_SUBSTITUTION_",
          "propertyType": "text",
          "default": "",
          "visible": [
             [
                {
                   "propertyId": "postgresSaveMode",
                   "value": "COPYIN"
                }
             ]
          ],
          "required": false,
          "tooltip": "Character used to substitute the quoting character in the events. Default value set to ASCII Backspace.",
          "qa": "fragment-details-postgres-new-quote-substitution"
       },
      {
        "propertyId": "encoding",
        "propertyName": "_POSTGRES_ENCODING_",
        "propertyType": "text",
        "default": "UTF8",
        "visible": [
          [
            {
              "propertyId": "postgresSaveMode",
              "value": "COPYIN"
            }
          ]
        ],
        "required": true,
        "tooltip": "Charset encoding to use during saving.",
        "qa": "fragment-details-postgres-encoding"
      },
       {
          "propertyId": "failFast",
          "propertyName": "_FAIL_FAST_",
          "propertyType": "boolean",
          "visibleOR": [
             [
                {
                   "propertyId": "postgresSaveMode",
                   "value": "STATEMENT"
                },
                {
                   "propertyId": "postgresSaveMode",
                   "value": "SINGLE_STATEMENT"
                }
             ]
          ],
          "default": true,
          "required": true,
          "tooltip": "If enabled, the workflow will fail once it encounters its first error. If it is not enabled, errors are ignored.",
          "qa": "fragment-details-postgres-failfast"
       },
       {
          "propertyId": "dropTemporalTableSuccess",
          "propertyName": "_DROP_TEMP_TABLE_SUCCESS_",
          "propertyType": "boolean",
          "visible": [
             [
                {
                   "propertyId": "postgresSaveMode",
                   "value": "ONE_TRANSACTION"
                }
             ]
          ],
          "default": true,
          "float": true,
          "required": true,
          "tooltip": "If checked, the temporal table used when choosing the 'One transaction' save mode to persist intermediate records is deleted. These table are always named with the suffix _tmp_{Timestamp}.",
          "qa": "fragment-details-postgres-droptemptable-success"
       },
       {
          "propertyId": "dropTemporalTableFailure",
          "propertyName": "_DROP_TEMP_TABLE_FAILURE_",
          "propertyType": "boolean",
          "visible": [
             [
                {
                   "propertyId": "postgresSaveMode",
                   "value": "ONE_TRANSACTION"
                }
             ]
          ],
          "default": false,
          "required": true,
          "tooltip": "If checked, the temporal table used when choosing the 'One transaction' save mode to persist intermediate records is deleted. These table are always named with the suffix _tmp_{Timestamp}.",
          "qa": "fragment-details-postgres-droptemptable-failure"
       },
       {
          "propertyId": "tlsEnabled",
          "propertyName": "_TLS_ENABLE_",
          "propertyType": "boolean",
          "tooltip": "Retrieves the necessary certificates from Vault and uses them to establish a TLS connection between Spark and PostgresSQL.",
          "default": false,
          "qa": "fragment-details-postgres-tls"
       },
       {
          "propertyId": "schemaFromDatabase",
          "propertyName": "_SCHEMA_FROM_DATABASE_",
          "propertyType": "boolean",
          "tooltip": "Tells the workflow to extract the schema from the output database.",
          "default": false,
          "qa": "fragment-details-postgres-schema-database"
       },
       {
          "propertyId": "errorSink",
          "propertyName": "_ERROR_SINK_",
          "propertyType": "boolean",
          "tooltip": "If checked, this output can be used to send error events. This feature can be configured through the errors management settings.",
          "default": false,
          "qa": "fragment-details-errorSink"
       },
      {
        "propertyId": "saveOptions",
        "propertyName": "_POSTGRES_SAVE_PROPERTIES_",
        "propertyType": "list",
        "required": false,
        "qa": "fragment-details-postgres-save-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_SAVE_OPTIONS_KEY_",
            "propertyType": "text",
             "width": 4,
            "hidden": false,
            "required": false,
            "qa": "fragment-details-postgres-saveOptionsKey"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_SAVE_OPTIONS_VALUE_",
            "propertyType": "text",
             "width": 4,
            "hidden": false,
            "required": false,
            "qa": "fragment-details-postgres-saveOptionsValue"
          }
        ]
      }
    ]
  }
