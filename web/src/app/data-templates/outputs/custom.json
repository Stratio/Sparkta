{
   "name": "Custom",
   "icon": "Custom",
   "className": "CustomOutputStep",
   "category": "Custom",
   "arity": ["NullaryToNullary", "NaryToNullary"],
   "supportedEngines": ["Streaming", "Batch"],
   "classPrettyName": "Custom",
   "description": "Users can extend the Sparta SDK with their own implementation of the Output class.",
   "properties": [
      {
         "propertyId": "customClassType",
         "propertyName": "_MODEL_TYPE_",
         "propertyType": "text",
         "placeHolder": "Custom",
         "required": true,
         "tooltip": "Output class type that implements the output SDK step",
         "qa": "custom-output-modelType"
      },
      {
         "propertyId": "errorSink",
         "propertyName": "_ERROR_SINK_",
         "propertyType": "boolean",
         "tooltip": "If checked, this output can be used to send error events. This feature can be configured through the errors management settings.",
         "default": false,
         "qa": "fragment-details-errorSink"
      },
      {
         "propertyId": "saveOptions",
         "propertyName": "_OPTION_PROPERTIES_",
         "propertyType": "list",
         "required": false,
         "qa": "custom-output-properties",
         "fields": [
            {
               "propertyId": "saveOptionsKey",
               "propertyName": "_OPTION_KEY_",
               "propertyType": "text",
               "required": false,
               "width": 4,
               "qa": "custom-output-properties-key"
            },
            {
               "propertyId": "saveOptionsValue",
               "propertyName": "_OPTION_VALUE_",
               "propertyType": "text",
               "required": false,
               "width": 4,
               "qa": "custom-output-properties-value"
            }
         ]
      }
   ],
  "writer": [
    {
      "propertyId": "saveMode",
      "propertyName": "_SAVEMODE_",
      "propertyType": "select",
      "required": true,
      "default": "Append",
      "tooltip": "Specifies a Save mode. According to the desired output step (e.g. Postgres), it is possible to select not only the native Spark save modes but also an Upsert save mode that requires the setting of the primary key fields property.",
      "qa": "save-mode-writer",
      "values": [
        {
          "label": "Append",
          "value": "Append"
        },
        {
          "label": "Error if exists",
          "value": "ErrorIfExists"
        },
        {
          "label": "Ignore",
          "value": "Ignore"
        },
        {
          "label": "Overwrite",
          "value": "Overwrite"
        },
        {
          "label": "Upsert",
          "value": "Upsert"
        },
        {
          "label": "Delete",
          "value": "Delete"
        }
      ]
    },
    {
      "propertyId": "primaryKey",
      "propertyName": "_PRIMARY_KEY_",
      "propertyType": "text",
      "required": false,
      "tooltip": "Sets the fields which indicates the 'WHERE' clause in the 'Upsert' save mode.",
      "qa": "primaryKey-by-writer"
    },
    {
      "propertyId": "updateFields",
      "propertyName": "_UPDATE_FIELDS_",
      "propertyType": "text",
      "required": false,
      "visible": [
        [
          {
            "propertyId": "saveMode",
            "value": "Upsert"
          }
        ]
      ],
      "tooltip": "These fields are the only one that will be updated on 'Upsert' operation",
      "qa": "constraint-by-writer"
    },
    {
      "propertyId": "partitionBy",
      "propertyName": "_PARTITION_BY_",
      "propertyType": "text",
      "required": false,
      "tooltip": "Partition the output by one or more fields, separated by ','. This property is supported by outputs that write on file systems",
      "qa": "partition-by-writer"
    }
  ]
}
