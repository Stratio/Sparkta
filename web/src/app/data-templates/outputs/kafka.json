  {
    "name": "Kafka",
    "classPrettyName": "Kafka",
    "className": "KafkaOutputStep",
    "icon": "Kafka",
    "arity": ["NaryToNullary"],
    "description": "Apache Kafka is publish-subscribe messaging rethought as a distributed commit log",
    "properties": [
      {
        "propertyId": "bootstrap.servers",
        "propertyName": "_BOOTSTRAP_SERVERS_",
        "propertyType": "list",
        "regexp": "",
        "default": "",
        "required": true,
        "tooltip": "Kafka host/port to connect",
        "qa": "fragment-details-kafka-bootstrap-servers",
        "fields": [
          {
            "propertyId": "host",
            "propertyName": "_HOST_",
            "propertyType": "text",
            "regexp": "((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(((?![0-9]+$)(?!.*-$)(?!-)[a-zA-Z0-9-]{2,63}))",
            "default": "localhost",
            "required": true,
            "tooltip": "Kafka's address.",
             "width": 6,
            "qa": "fragment-details-kafka-host"
          },
          {
            "propertyId": "port",
            "propertyName": "_PORT_",
            "propertyType": "text",
            "regexp": "(0|([1-9]\\d{0,3}|[1-5]\\d{4}|[6][0-5][0-5]([0-2]\\d|[3][0-5])))",
            "default": "9092",
            "required": true,
            "tooltip": "Kafka's port.",
             "width": 2,
            "qa": "fragment-details-kafka-port"
          }
        ]
      },
      {
        "propertyId": "value.serializer.outputFormat",
        "propertyName": "_KAFKA_OUTPUT_FORMAT_",
        "propertyType": "select",
        "values": [
           {
              "label": "Row",
              "value": "ROW"
           },
           {
            "label": "Json",
            "value": "JSON"
           },
           {
              "label": "Avro",
              "value": "AVRO"
           }
        ],
        "default": "ROW",
        "required": true,
        "qa": "fragment-details-kafka-outputFormat"
      },
      {
        "propertyId": "value.serializer.row.delimiter",
        "propertyName": "_KAFKA_ROW_SEPARATOR_",
        "propertyType": "text",
        "default": ",",
        "required": false,
         "visible": [
            [
               {
                  "propertyId": "value.serializer.outputFormat",
                  "value": "ROW"
               }
            ]
         ],
        "qa": "fragment-details-kafka-row-separator"
      },
       {
          "propertyId": "key.serializer.avro.schema.recordNamespace",
          "propertyName": "_KAFKA_AVRO_SCHEMA_RECORD_NAMESPACE_",
          "propertyType": "text",
          "default": "",
          "required": false,
          "visible": [
             [
                {
                   "propertyId": "value.serializer.outputFormat",
                   "value": "AVRO"
                }
             ]
          ],
          "qa": "fragment-details-kafka-avro-recordNamespace"
       },
       {
          "propertyId": "key.serializer.avro.schema.topLevelRecord",
          "propertyName": "_KAFKA_AVRO_SCHEMA_RECORD_TOP_LEVEL_RECORD_",
          "propertyType": "text",
          "default": "",
          "required": false,
          "visible": [
             [
                {
                   "propertyId": "value.serializer.outputFormat",
                   "value": "AVRO"
                }
             ]
          ],
          "qa": "fragment-details-kafka-avro-topLevelRecord"
       },
       {
          "propertyId": "value.serializer.avro.schema.fromRow",
          "propertyName": "_KAFKA_AVRO_SCHEMA_FROM_ROW_",
          "propertyType": "boolean",
          "default": false,
          "required": false,
          "visible": [
             [
                {
                   "propertyId": "value.serializer.outputFormat",
                   "value": "AVRO"
                }
             ]
          ],
          "qa": "fragment-details-kafka-avro-fromRow"
       },
       {
          "propertyId": "value.serializer.avro.schema.provided",
          "propertyName": "_DESERIALIZER_AVRO_SCHEMA_",
          "propertyType": "textarea",
          "contentType": "JSON",
          "width": 8,
          "tooltip": "Avro schema",
          "default": "",
          "visible": [
             [
                {
                   "propertyId": "value.serializer.outputFormat",
                   "value": "AVRO"
                },
                {
                   "propertyId": "value.serializer.avro.schema.fromRow",
                   "value": false
                }
             ]
          ],
          "required": false,
          "qa": "workflow-transformation-json-schema-provided"
       },
       {
          "propertyId": "keySeparator",
          "propertyName": "_KEY_SEPARATOR_",
          "propertyType": "text",
          "default": ",",
          "required": false,
          "tooltip": "Specifies the separator when the key is used as partitioning",
          "qa": "fragment-details-kafka-keySeparator"
       },
      {
        "propertyId": "acks",
        "propertyName": "_ACKS_",
        "propertyType": "text",
        "default": "0",
        "required": false,
        "tooltip": "Specifies whether the producer waits for an acknowledgment from the broker.",
        "qa": "fragment-details-kafka-request-required-acks"
      },
      {
        "propertyId": "batch.size",
        "propertyName": "_BATCH_NUM_MESSAGES_",
        "propertyType": "text",
        "regexp": "[0-9]+",
        "default": "200",
        "required": false,
        "tooltip": "The number of messages to send in one batch",
        "qa": "fragment-details-kafka-batch-num-messages"
      },
      {
        "propertyId": "security.protocol",
        "propertyName": "_SECURITY_PROTOCOL_",
        "propertyType": "select",
        "regexp": "PLAINTEXT|SSL",
        "values": [
          {
            "label": "PLAINTEXT",
            "value": "PLAINTEXT"
          },
          {
            "label": "SSl",
            "value": "SSL"
          }
        ],
        "default": "PLAINTEXT",
        "required": true,
        "qa": "fragment-details-kafka-security-protocol"
      },
      {
        "propertyId": "ssl.client.auth",
        "propertyName": "_SECURITY_AUTH_",
        "propertyType": "select",
        "values": [
          {
            "label": "none",
            "value": "none"
          },
          {
            "label": "required",
            "value": "required"
          },
          {
            "label": "requested",
            "value": "requested"
          }
        ],
        "default": "none",
        "required": true,
        "qa": "fragment-details-kafka-security-auth"
      },
      {
          "propertyId": "tlsEnabled",
          "propertyName": "_TLS_ENABLE_",
          "propertyType": "boolean",
          "tooltip": "Enable TLS connection to connect to Kafka brokers getting certs from vault in Spark job",
          "default": false,
          "qa": "fragment-details-kafka-tls"
       },
      {
        "propertyId": "saveOptions",
        "propertyName": "_KAFKA_PROPERTIES_",
        "propertyType": "list",
        "required": false,
        "qa": "fragment-details-kafka-properties",
        "fields": [
          {
            "propertyId": "saveOptionsKey",
            "propertyName": "_KAFKA_PROPERTY_KEY_",
            "propertyType": "text",
             "width": 4,
            "required": false,
            "qa": "fragment-details-kafka-kafkaPropertyKey"
          },
          {
            "propertyId": "saveOptionsValue",
            "propertyName": "_KAFKA_PROPERTY_VALUE_",
            "propertyType": "text",
             "width": 4,
            "required": false,
            "qa": "fragment-details-kafka-kafkaPropertyValue"
          }
        ]
      }
    ]
  }
