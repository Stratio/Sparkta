{
   "name": "Elasticsearch",
   "classPrettyName": "ElasticSearch",
   "className": "ElasticSearchOutputStep",
   "icon": "Elasticsearch",
   "arity": ["NullaryToNullary", "NaryToNullary"],
   "supportedEngines": ["Streaming", "Batch"],
   "description": "Elasticsearch is a search server based on Lucene. This output uses the generic implementation with DataFrames.",
   "properties": [
      {
         "propertyId": "nodes",
         "propertyName": "_NODES_",
         "propertyType": "list",
         "default": "",
         "required": true,
         "hidden": false,
         "limit": 0,
         "tooltip": "Configures the 'es.nodes' and 'es.port' properties.",
         "qa": "fragment-details-elasticSearch-nodes",
         "fields": [
            {
               "propertyId": "node",
               "propertyName": "_HOST_",
               "propertyType": "text",
               "default": "{{{Environment.ES_HOST}}}",
               "required": true,
               "width": 6,
               "qa": "fragment-details-elasticSearch-node"
            },
            {
               "propertyId": "httpPort",
               "propertyName": "_HTTP_PORT_",
               "propertyType": "text",
               "default": "{{{Environment.ES_PORT}}}",
               "width": 5,
               "required": true,
               "qa": "fragment-details-elasticSearch-httpPort"
            }
         ]
      },
      {
         "propertyId": "indexMapping",
         "propertyName": "_INDEX_MAPPING_",
         "propertyType": "text",
         "default": "{{{Default.ES_INDEX_MAPPING}}}",
         "tooltip": "Value will be used as mapping name for indexing.",
         "required": false,
         "qa": "fragment-details-elasticSearch-indexMapping"
      },
      {
         "propertyId": "enableAutoCreateIndex",
         "propertyName": "_ENABLE_INDEX_AUTO_CREATE_",
         "propertyType": "boolean",
         "tooltip": "Enables whether ElasticSearch should create an index (if it is missing) when writing data or fail.",
         "default": true,
         "qa": "fragment-details-elasticSearch-index-auto-create"
      },
      {
         "propertyId": "tlsEnabled",
         "propertyName": "_TLS_ENABLE_",
         "propertyType": "boolean",
         "tooltip": "Retrieves the necessary certificates from Vault and uses them to establish a TLS connection between Spark and ElasticSearch.",
         "default": false,
         "qa": "fragment-details-elasticSearch-tls"
      },
      {
         "propertyId": "errorSink",
         "propertyName": "_ERROR_SINK_",
         "propertyType": "boolean",
         "tooltip": "If checked, this output can be used to send error events. This feature can be configured through the errors management settings.",
         "default": false,
         "qa": "fragment-details-errorSink"
      },
      {
         "propertyId": "saveOptions",
         "propertyName": "_ELASTICSEARCH_SAVE_PROPERTIES_",
         "propertyType": "list",
         "default": "",
         "required": false,
         "tooltip": "",
         "qa": "fragment-details-elasticsearch-save-properties",
         "fields": [
            {
               "propertyId": "saveOptionsKey",
               "propertyName": "_SAVE_OPTIONS_KEY_",
               "propertyType": "text",
               "regexp": "",
               "default": "",
               "hidden": false,
               "width": 4,
               "required": false,
               "qa": "fragment-details-elasticsearch-saveOptionsKey"
            },
            {
               "propertyId": "saveOptionsValue",
               "propertyName": "_SAVE_OPTIONS_VALUE_",
               "propertyType": "text",
               "regexp": "",
               "default": "",
               "width": 4,
               "hidden": false,
               "required": false,
               "qa": "fragment-details-elasticsearch-saveOptionsValue"
            }
         ]
      }
   ]
}
