[
   {
      "propertyId": "tableName",
      "propertyName": "_TABLE_NAME_",
      "propertyType": "text",
      "required": false,
      "tooltip": "Name used to persist the resulting data in a table, topic or queue. If this field is left blank Sparta will use the transformation name instead.",
      "qa": "table-name-writer-tableName"
   },
   {
      "propertyId": "errorTableName",
      "propertyName": "_ERROR_TABLE_NAME_",
      "propertyType": "text",
      "required": false,
      "tooltip": "Name used to save the error data in a table, topic or similar. If this field is left blank Sparta will use the transformation name instead.",
      "qa": "table-name-writer-errorTableName"
   },
   {
      "propertyId": "saveMode",
      "propertyName": "_SAVEMODE_",
      "propertyType": "select",
      "required": true,
      "default": "Append",
      "tooltip": "Specifies a Save mode. According to the desired output step (e.g. Postgres), it is possible to select not only the native Spark save modes but also an Upsert save mode that requires the setting of the primary key fields property.",
      "qa": "save-mode-writer",
      "values": [
         {
            "label": "Append",
            "value": "Append"
         },
         {
            "label": "Error if exists",
            "value": "Error if exists"
         },
         {
            "label": "Ignore",
            "value": "Ignore"
         },
         {
            "label": "Overwrite",
            "value": "Overwrite"
         },
         {
            "label": "Upsert",
            "value": "Upsert"
         },
         {
            "label": "Delete",
            "value": "Delete"
         }
      ]
   },
   {
      "propertyId": "constraintType",
      "propertyName": "_CONSTRAINT_TYPE_",
      "propertyType": "select",
      "required": true,
      "default": "primaryKey",
      "tooltip": "The constraint type used for upserting data. The user may choose between 'Primary Key' or 'Unique constraint fields'.",
      "qa": "constraint-type-writer",
      "visibleOR": [
         [
            {
               "propertyId": "saveMode",
               "value": "Upsert"
            },
            {
               "propertyId": "saveMode",
               "value": "Delete"
            }
         ]
      ],
      "values": [
         {
            "label": "By primary key",
            "value": "primaryKey"
         },
         {
            "label": "By unique constraint",
            "value": "uniqueConstraint"
         }
      ]
   },
   {
      "propertyId": "primaryKey",
      "propertyName": "_PRIMARY_KEY_",
      "propertyType": "text",
      "required": true,
      "visible": [
         [
            {
               "propertyId": "constraintType",
               "value": "primaryKey"
            }
         ]
      ],
      "tooltip": "Sets the fields which indicates the 'WHERE' clause in the 'Upsert' save mode.",
      "qa": "primaryKey-by-writer"
   },
   {
      "propertyId": "uniqueConstraintName",
      "propertyName": "_UNIQUE_CONSTRAINT_NAME_",
      "propertyType": "text",
      "required": true,
      "visible": [
         [
            {
               "propertyId": "constraintType",
               "value": "uniqueConstraint"
            }
         ]
      ],
      "tooltip": "Unique Constraint used in the 'Upsert' operation. If it doesn't exist or the table is created for the first time, it will be also created using the values on the 'Unique Constraint Fields' property which must be separated by ','.",
      "qa": "constraint-by-writer"
   },
   {
      "propertyId": "uniqueConstraintFields",
      "propertyName": "_UNIQUE_CONSTRAINT_FIELDS_",
      "propertyType": "text",
      "required": false,
      "visible": [
         [
            {
               "propertyId": "constraintType",
               "value": "uniqueConstraint"
            }
         ]
      ],
      "tooltip": "If a table is created for the first time, the value inside this field will be used to compose its 'UNIQUE constraint' property. During the upsert, if this field is empty, the above Unique Constraint Name property will be used instead.",
      "qa": "constraint-by-writer"
   }, 
    {
        "propertyId": "updateFields",
        "propertyName": "_UPDATE_FIELDS_",
        "propertyType": "text",
        "required": false,
        "visible": [
            [
                {
                    "propertyId": "saveMode",
                    "value": "Upsert"
                }
            ]
        ],
        "tooltip": "These fields are the only one that will be updated on 'Upsert' operation",
        "qa": "constraint-by-writer"
    },
   {
      "propertyId": "partitionBy",
      "propertyName": "_PARTITION_BY_",
      "propertyType": "text",
      "required": false,
      "tooltip": "Partition the output by one or more fields, separated by ','. This property is supported by outputs that write on file systems",
      "qa": "partition-by-writer"
   }
]
